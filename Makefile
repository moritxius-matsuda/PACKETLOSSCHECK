# Ping Monitor Makefile
# Vereinfacht die Verwaltung des Ping Monitor Services

.PHONY: help install uninstall start stop restart status logs test clean

# Standardziel
help:
	@echo "üåê Ping Monitor - Verf√ºgbare Befehle:"
	@echo ""
	@echo "  üì¶ Installation:"
	@echo "    make install     - Installiert den Service"
	@echo "    make uninstall   - Deinstalliert den Service"
	@echo ""
	@echo "  üéÆ Service-Kontrolle:"
	@echo "    make start       - Startet den Service"
	@echo "    make stop        - Stoppt den Service"
	@echo "    make restart     - Startet den Service neu"
	@echo "    make status      - Zeigt Service-Status"
	@echo "    make logs        - Zeigt Live-Logs"
	@echo ""
	@echo "  üß™ Entwicklung:"
	@echo "    make test        - F√ºhrt Tests aus"
	@echo "    make dev         - Startet Entwicklungsserver"
	@echo "    make clean       - Bereinigt tempor√§re Dateien"
	@echo ""
	@echo "  üìä Monitoring:"
	@echo "    make web         - √ñffnet Web-Interface"
	@echo "    make backup      - Erstellt Datenbank-Backup"

# Installation
install:
	@echo "üì¶ Installiere Ping Monitor..."
	@chmod +x install.sh
	@sudo ./install.sh

uninstall:
	@echo "üóëÔ∏è Deinstalliere Ping Monitor..."
	@chmod +x uninstall.sh
	@sudo ./uninstall.sh

# Service-Kontrolle
start:
	@echo "‚ñ∂Ô∏è Starte Ping Monitor Service..."
	@sudo systemctl start ping-monitor.service
	@sudo systemctl status ping-monitor.service --no-pager

stop:
	@echo "‚èπÔ∏è Stoppe Ping Monitor Service..."
	@sudo systemctl stop ping-monitor.service

restart:
	@echo "üîÑ Starte Ping Monitor Service neu..."
	@sudo systemctl restart ping-monitor.service
	@sudo systemctl status ping-monitor.service --no-pager

status:
	@echo "üìä Ping Monitor Service Status:"
	@sudo systemctl status ping-monitor.service --no-pager

logs:
	@echo "üìù Ping Monitor Live-Logs (Ctrl+C zum Beenden):"
	@sudo journalctl -u ping-monitor -f

# Entwicklung
test:
	@echo "üß™ F√ºhre Tests aus..."
	@python3 test_local.py test

dev:
	@echo "üöÄ Starte Entwicklungsserver..."
	@python3 test_local.py server

clean:
	@echo "üßπ Bereinige tempor√§re Dateien..."
	@python3 test_local.py cleanup
	@rm -f *.pyc
	@rm -rf __pycache__
	@echo "‚úÖ Bereinigung abgeschlossen"

# Monitoring
web:
	@echo "üåê √ñffne Web-Interface..."
	@python3 -c "import webbrowser; webbrowser.open('http://localhost:4000')"

backup:
	@echo "üíæ Erstelle Datenbank-Backup..."
	@mkdir -p backups
	@cp /opt/ping-monitor/ping_data.db backups/ping_data_backup_$(shell date +%Y%m%d_%H%M%S).db 2>/dev/null || \
	 cp ping_data.db backups/ping_data_backup_$(shell date +%Y%m%d_%H%M%S).db 2>/dev/null || \
	 echo "‚ùå Keine Datenbank gefunden"
	@echo "‚úÖ Backup erstellt in backups/"

# Abh√§ngigkeiten pr√ºfen
check-deps:
	@echo "üîç Pr√ºfe Abh√§ngigkeiten..."
	@python3 -c "import flask; print('‚úÖ Flask verf√ºgbar')" || echo "‚ùå Flask nicht installiert"
	@python3 -c "import sqlite3; print('‚úÖ SQLite verf√ºgbar')" || echo "‚ùå SQLite nicht verf√ºgbar"
	@which ping > /dev/null && echo "‚úÖ Ping verf√ºgbar" || echo "‚ùå Ping nicht verf√ºgbar"

# Konfiguration anzeigen
config:
	@echo "üìã Aktuelle Konfiguration:"
	@python3 -c "from config import Config; Config.print_config()"

# Service-Informationen
info:
	@echo "‚ÑπÔ∏è Ping Monitor Informationen:"
	@echo "   Service-Datei: /etc/systemd/system/ping-monitor.service"
	@echo "   Installation: /opt/ping-monitor/"
	@echo "   Datenbank: /opt/ping-monitor/ping_data.db"
	@echo "   Logs: /opt/ping-monitor/ping_monitor.log"
	@echo "   Web-Interface: http://localhost:4000"

# Vollst√§ndige Neuinstallation
reinstall: uninstall install
	@echo "üîÑ Neuinstallation abgeschlossen"